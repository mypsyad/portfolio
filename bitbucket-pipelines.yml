# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
# image: atlassian/default-image:2
image: node:lts-alpine

pipelines:
  default:
    # - parallel:
    #   - step:
    #       name: 'Install Packages'
    #       script:
    #         - npm run install
    #         # - echo "Your build and test goes here..."
    #   - step:
    #       name: 'Build'
    #       script:
    #         - npm run build
      # - step:
      #     name: 'Security scan'
      #     script:
      #       - echo "Your security scan goes here..."

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: 'Install Packages and Build'
        caches:
          - node
        script:
          - npm install
          - npm run lint
          - npm run build
          - npm run generate
        artifacts:
          - dist**
    - step:
        name: 'Deployment to Staging'
        deployment: staging
        script:
          - echo "Your deployment to staging script goes here..."
          # - pipe: atlassian/bitbucket-upload-file:0.1.2
          #   variables:
          #     BITBUCKET_USERNAME: $BITBUCKET_USERNAME
          #     BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
          #     ZIP_FILE: dist.zip
          - curl -X POST --user "${BITBUCKET_USERNAME}:${BITBUCKET_APP_PASSWORD}" "https://api.bitbucket.org/2.0/repositories/mypsyad/portfolio/downloads" -D "dist"
    - step:
        name: 'Deployment to Production'
        deployment: production
        trigger: 'manual'
        script:
          - echo "Your deployment to production script goes here..."
